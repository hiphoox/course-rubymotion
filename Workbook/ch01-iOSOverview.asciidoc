Time Zone Converter
=================

Now that you have created your first your rubymotion app let’s create a “time zone converter”, put the following command in your terminal:

[source, sh]
--------------------------------------
$ motion create TimeZoneConverter
--------------------------------------

And then take a look inside

[source, sh]
--------------------------------------
$ cd TimeZoneConverter

$ ls
--------------------------------------

You will see the following directories created

--------------------------------------
Rakefile app resources spec
--------------------------------------

Now feel free to execute the following command:

[source, sh]
--------------------------------------
$ rake
--------------------------------------

If everything goes well, you will see an ugly black window.

.Empty Application
image::resources/ch01-iOSOverview/image1.png[Empty Application]



View Controller
---------------

A view controller class provides a quite utile mechanism to manage views in iOS applications; it could coordinate efforts with the model and other view controllers in order to build an entire application.

Adding a View Controller
~~~~~~~~~~~~~~~~~~~~~~~~

Open your file *app_delegate.rb* in app folder. And add the code between starts in it:

[source, ruby]
---------------------------------------------------------------------------------
class AppDelegate
 
 def application(application, didFinishLaunchingWithOptions:launchOptions)
    **************************************************************** 
    @window = UIWindow.alloc.initWithFrame(UIScreen.mainScreen.bounds)
    @window.rootViewController = RootViewController.alloc.init
    @window.makeKeyAndVisible
    ****************************************************************
    true
  end

end
---------------------------------------------------------------------------------

Now create a new file named *root_view_controller.rb* in app folder and add the following code:


[source, ruby]
--------------
class RootViewController < UIViewController
  
  def viewDidLoad
    view.backgroundColor = UIColor.scrollViewTexturedBackgroundColor
  end	

end
--------------

Save your file and run the rake command:

[source, sh]
--------------------------------------
$ rake
--------------------------------------

You should see a gray styled view, congratulations you have added your first View Controller, it wasn't really that hard, was it?

.View Controller Added
image::resources/ch01-iOSOverview/image2.png[View Controller Added]

It’s time to create our human interface controls, create a new file named *root_view_uitilities.rb* and add the following code:	

[source, ruby]
--------------
def location_label(xPosition,yPosition)
 
  label = UILabel.alloc.initWithFrame(CGRectMake(xPosition,yPosition,200,50))
  label.backgroundColor = UIColor.clearColor;
  label.font = UIFont.fontWithName("HelveticaNeue-CondensedBold",size:18)
  label.text = "Time Zone"
  label
end

def time_label(xPosition,yPosition)
  
  label = UILabel.alloc.initWithFrame(CGRectMake(xPosition,yPosition,200,50))
  label.backgroundColor = UIColor.clearColor;
  label.text = "Time"
  label.textColor = UIColor.whiteColor;
  label
end

def select_time_zone_Button (xPosition,yPosition)
  
  button = UIButton.buttonWithType(UIButtonTypeRoundedRect)
  button.frame = CGRectMake(xPosition,yPosition,90,90)
  button.setTitle("Select",forState:UIControlStateNormal)
  button
end

def zone_picker (xPosition,yPosition)
  
  picker =  UIPickerView.alloc.initWithFrame(CGRectMake(xPosition,yPosition, 320, 250))
  picker.hidden = true 
  picker.showsSelectionIndicator = true 
  picker
end
--------------

Save your file and compile the project to see if everything goes well, and then open the file *root_view_controller.rb* We are going to add our controls, add the code between the starts in it:


[source, ruby]
--------------
class RootViewController < UIViewController

****************************************************************  
  def set_default_time_zone

    @defaultTimeZoneLabel.text =  NSTimeZone.localTimeZone.name
  end

  def set_default_time

    defaultTimeZone = NSTimeZone.timeZoneWithName(@defaultTimeZoneLabel.text)
    formatter = NSDateFormatter.alloc.init
    formatter.setDateFormat('HH:mm')
    formatter.setTimeZone(defaultTimeZone) 
    dateFormat = formatter.stringFromDate(NSDate.date)
    @defaultTimeLabel.text = "UTC "+(NSTimeZone.localTimeZone.secondsFromGMT/3600).to_s + "  "+dateFormat
  end
****************************************************************  	  	
  
  def viewDidLoad
****************************************************************  
    @defaultTimeZoneLabel = location_label(25,120)    
    @defaultTimeLabel = time_label(50,150)

    view.addSubview(@defaultTimeZoneLabel)
    view.addSubview(@defaultTimeLabel)
   
    set_default_time_zone
    set_default_time
****************************************************************  
    view.backgroundColor = UIColor.scrollViewTexturedBackgroundColor	
  end	

end
--------------

Run your program and you should see two new labels added to the screen, the first one indicates the current timezone name, and the second one the current time.

.Controls Added
image::resources/ch01-iOSOverview/image3.png[Controls Added]

It’s time to add a control that let us select from different time zones, open the *root_view_controller.rb* and add the code the following code to it:

[source, ruby]
--------------
class RootViewController < UIViewController

  def set_default_time_zone

    @defaultTimeZoneLabel.text =  NSTimeZone.localTimeZone.name
  end


  def set_default_time

    defaultTimeZone = NSTimeZone.timeZoneWithName(@defaultTimeZoneLabel.text)
    formatter = NSDateFormatter.alloc.init
    formatter.setDateFormat('HH:mm')
    formatter.setTimeZone(defaultTimeZone) 
    dateFormat = formatter.stringFromDate(NSDate.date)
    @defaultTimeLabel.text = "UTC "+(NSTimeZone.localTimeZone.secondsFromGMT/3600).to_s + "  "+dateFormat
  end
 
 ****************************************************************
  def present_local_zone_picker(sender)
    
    button = sender
    @zonePicker.frame = CGRectMake(0,244, 320, 216)
    @currentZoneLabel = @defaultTimeZoneLabel
    
    if @zonePicker.isHidden
      @zonePicker.hidden = false
      button.setTitle("Choose",forState:UIControlStateNormal)
    else 
      @zonePicker.hidden = true
      button.setTitle("Select",forState:UIControlStateNormal)
      set_default_time
    end
  end


# UIPicker View Controller DataSource

  def numberOfComponentsInPickerView(pickerView) 
    
    1
  end


  def pickerView(pickerView,numberOfRowsInComponent:component)  
    
    NSTimeZone.knownTimeZoneNames.count
  end


# UIPicker View Controller Delegate

  def pickerView(pickerView, titleForRow:row,forComponent:component) 
    
    NSTimeZone.knownTimeZoneNames[row]
  end


  def pickerView(pickerView, didSelectRow:row, inComponent:component) 
    
    @currentZoneLabel.text = NSTimeZone.knownTimeZoneNames[row]
  end  
  

****************************************************************	
  def viewDidLoad

    @defaultTimeZoneLabel = location_label(25,120)    
    @defaultTimeLabel = time_label(50,150)

****************************************************************	   
      
    chooseLocalButton = select_time_zone_Button(220,115)
    chooseLocalButton.addTarget(self, 
                                  action: :'present_local_zone_picker:',
                                  forControlEvents:UIControlEventTouchUpInside)
      
    @zonePicker = zone_picker(0,244)
    @zonePicker.dataSource = self
    @zonePicker.delegate = self

****************************************************************	    
      
    view.addSubview(@defaultTimeZoneLabel)
    view.addSubview(@defaultTimeLabel)

****************************************************************   
      
    view.addSubview(chooseLocalButton)
    view.addSubview(@zonePicker)

****************************************************************   
    set_default_time_zone
    set_default_time
    view.backgroundColor = UIColor.scrollViewTexturedBackgroundColor	
  end	
end
-------------------

Next compile your application; you should see a white big button, don’t hesitate and try it.

.UIPicker Added
image::resources/ch01-iOSOverview/image4.png[UIPicker Added]
.UIPicker Added
image::resources/ch01-iOSOverview/image5.png[UIPicker Selected]

Go ahead and look for a region that you may like to be and see the local time on this area. 

You ‘ll never wonder again what time is it on other side of the planet, but you may think that its not good enough to know the time in one region, two its always better than one. Lets add a second set of controls.

First at all open your *root_view_uitilities.rb* file and add the following code in the loadView method.

[source, ruby]
--------------
def viewDidLoad
****************************************************************

  chooseLocalButton.addTarget(self, action::'present_local_zone_picker:',
	                          forControlEvents:UIControlEventTouchUpInside)

  @converTimeZoneLabel =  location_label(25,290)
  @convertTimeLabel = time_label(50,320)
  chooseconvertButton = select_time_zone_Button(220,300)

  chooseconvertButton.addTarget(self, action: :'present_convert_zone_picker:',  
	                                                        forControlEvents:UIControlEventTouchUpInside)

  view.addSubview(@converTimeZoneLabel) 
  view.addSubview(@convertTimeLabel)
  view.addSubview(chooseconvertButton)

****************************************************************
end
-------------------

Don’t forget to add the following method in the same file:	

[source, ruby]
---------------------------------------------------------------------------------
def present_convert_zone_picker(sender)
	    
  button = sender
  @zonePicker.frame = CGRectMake(0,0, 320, 216)
  @currentZoneLabel = @converTimeZoneLabel

  if @zonePicker.isHidden
	      
    @zonePicker.hidden = false
    button.setTitle("Choose",forState:UIControlStateNormal)

  else 
	      
    @zonePicker.hidden = true
    button.setTitle("Select",forState:UIControlStateNormal)
    set_Convert_Time

  end

end
---------------------------------------------------------------------------------

Styling the App
~~~~~~~~~~~~~~~

I think that the style of our application does not reflect the adventure spirit that should be; maybe with some little improvements we can change that.

Run the application with the rake command

[source, sh]
------------
$ rake
------------

Now you should see REPL in your console:

[source, sh]
------------
Create ./build/iPhoneSimulator-6.0-Development/TimeZoneConverter.dSYM
Simulate ./build/iPhoneSimulator-6.0-Development/TimeZoneConverter.app
(main)>
------------

Now hold ‘command’ key and hover mouse on simulator screen. You can see a red-bordered box appears among the application elements, select the first Time Zone area, the interactive console should display the instance corresponding to that label

[source, sh]
------------
Build ./build/iPhoneSimulator-6.0-Development
Simulate ./build/iPhoneSimulator-6.0-Development/TimeZoneConverter.app
(#<UILabel:0x956a650>)>
------------

Now its time to add something fresh to our application as we see it running, yes you read right type the following scrip in you REPL:

[source, ruby]
--------------
self.font = UIFont.fontWithName("Noteworthy-Bold",size:18)
--------------
 
.UIPicker Added
image::resources/ch01-iOSOverview/image6.png[UIPicker Added]

and hit enter, and Voila !! the font has changed, but you may not liked, so try with different fonts and sizes here there are some of them:

* Georgia-Italic
* MarkerFelt-Thin
* HelveticaNeue-Medium

Since the creation of the apple store the are many app to choose from, the app store it’s not the wild wild west that used to be, so we are going to give some personality to our app    


First, copy the assets from the chapter one directory, and put them into the Resources directory, and the in your *root_view_controller.rb* change the following line in your *viewDidLoad* method:

[source, ruby]
--------------
self.view.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"image.jpg"]];
--------------

for this one:
[source, ruby]
--------------
view.backgroundColor = UIColor.colorWithPatternImage(UIImage.imageNamed("bgApp.png"))
--------------

.Stylish App
image::resources/ch01-iOSOverview/image7.png[Stylish App]

We should add some personality to our buttons, open your file *root_view_uitilities.rb* and replace the following method *select_time_zone_Button*: 

[source, ruby]
--------------
def select_time_zone_Button (xPosition,yPosition)
 
  button = UIButton.buttonWithType(UIButtonTypeCustom)
  button.frame = CGRectMake(xPosition,yPosition,85,73)
  button.setBackgroundImage (UIImage.imageNamed("btnSelect.png"),forState:UIControlStateNormal)
  button.setTitle("Select",forState:UIControlStateNormal)
  button
end
-------------


Challenge - Adding a title
~~~~~~~~~~~~~~~~~~~~~~~~~~

Adding title to the application, try adding a new method in your file *select_time_zone_Button* that return an UILabel and put it as title for the application.

Challenge - Hours Between Zones
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Add a new label between time zones that indicates the diference between time zones



